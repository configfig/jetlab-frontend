const express = require('express');
const nodemailer = require('nodemailer');
const cors = require('cors');
const helmet = require('helmet');
const rateLimit = require('express-rate-limit');
const Joi = require('joi');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 5000;

// Middleware
app.use(helmet());
app.use(cors({
  origin: [
    'http://localhost:3000', 
    'https://jetlabco.com', 
    'https://www.jetlabco.com'
  ],
  credentials: true
}));
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true }));

// Rate limiting
const emailLimiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
  max: 5, // –º–∞–∫—Å–∏–º—É–º 5 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å IP –∑–∞ 15 –º–∏–Ω—É—Ç
  message: {
    error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —ç—Ç–æ–≥–æ IP, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
  }
});

// SMTP Configuration
const transporter = nodemailer.createTransporter({
  host: 'smtp.jetlabco.com',
  port: 587,
  secure: false, // true –¥–ª—è 465, false –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤
  auth: {
    user: 'info@jetlabco.com',
    pass: 'Vv1G2zR9u9'
  },
  tls: {
    rejectUnauthorized: false // –†–∞–∑—Ä–µ—à–∏—Ç—å —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
transporter.verify((error, success) => {
  if (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error);
  } else {
    console.log('‚úÖ SMTP —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å–µ–º');
    console.log('üìß –ü–∏—Å—å–º–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–∞: k.websupp@gmail.com');
  }
});

// Validation schemas
const contactSchema = Joi.object({
  name: Joi.string().min(2).max(100).required(),
  email: Joi.string().email().required(),
  phone: Joi.string().min(10).max(20).required(),
  service: Joi.string().min(2).max(100).required(),
  message: Joi.string().max(2000).optional()
});

const quizSchema = Joi.object({
  name: Joi.string().min(2).max(100).required(),
  email: Joi.string().email().required(),
  phone: Joi.string().min(10).max(20).required(),
  company: Joi.string().max(100).optional(),
  service: Joi.string().min(2).max(100).required(),
  budget: Joi.string().required(),
  timeline: Joi.string().required(),
  goals: Joi.array().items(Joi.string()).required(),
  description: Joi.string().max(2000).required()
});

const newsletterSchema = Joi.object({
  email: Joi.string().email().required()
});

// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
const formatPhoneNumber = (phone) => {
  const cleaned = phone.replace(/\D/g, '');
  if (cleaned.length === 11 && cleaned.startsWith('1')) {
    return `+1 (${cleaned.slice(1, 4)}) ${cleaned.slice(4, 7)}-${cleaned.slice(7)}`;
  } else if (cleaned.length === 10) {
    return `+1 (${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;
  }
  return phone;
};

// Routes

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞
app.get('/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    message: 'JetLab Email Server —Ä–∞–±–æ—Ç–∞–µ—Ç',
    timestamp: new Date().toISOString(),
    emailTarget: 'k.websupp@gmail.com'
  });
});

// Endpoint –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
app.post('/api/contact', emailLimiter, async (req, res) => {
  try {
    console.log('üìß –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞:', req.body);

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const { error, value } = contactSchema.validate(req.body);
    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', error.details[0].message);
      return res.status(400).json({
        success: false,
        error: '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö',
        details: error.details[0].message
      });
    }

    const { name, email, phone, service, message } = value;
    const formattedPhone = formatPhoneNumber(phone);

    // HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å—å–º–∞
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <style>
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: #000; color: white; padding: 20px; border-radius: 8px 8px 0 0; }
          .content { background: #f9f9f9; padding: 20px; border-radius: 0 0 8px 8px; }
          .field { margin-bottom: 15px; }
          .label { font-weight: bold; color: #555; }
          .value { margin-top: 5px; }
          .footer { text-align: center; margin-top: 20px; padding: 20px; color: #888; font-size: 14px; }
          .urgent { background: #ff6b6b; color: white; padding: 10px; border-radius: 5px; margin-bottom: 15px; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="urgent">
            <strong>üö® –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê JETLABCO.COM</strong>
          </div>
          <div class="header">
            <h2>üìß –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã</h2>
            <p>–û—Ç: ${name}</p>
            <p>–£—Å–ª—É–≥–∞: ${service}</p>
          </div>
          <div class="content">
            <div class="field">
              <div class="label">üë§ –ò–º—è:</div>
              <div class="value">${name}</div>
            </div>
            <div class="field">
              <div class="label">üìß Email:</div>
              <div class="value"><a href="mailto:${email}">${email}</a></div>
            </div>
            <div class="field">
              <div class="label">üìû –¢–µ–ª–µ—Ñ–æ–Ω:</div>
              <div class="value"><a href="tel:${phone}">${formattedPhone}</a></div>
            </div>
            <div class="field">
              <div class="label">üõ†Ô∏è –ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∞—è —É—Å–ª—É–≥–∞:</div>
              <div class="value"><strong>${service}</strong></div>
            </div>
            ${message ? `
            <div class="field">
              <div class="label">üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:</div>
              <div class="value">${message.replace(/\n/g, '<br>')}</div>
            </div>
            ` : ''}
          </div>
          <div class="footer">
            <p>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ JetLab.co | ${new Date().toLocaleString('ru-RU')}</p>
          </div>
        </div>
      </body>
      </html>
    `;

    const mailOptions = {
      from: `"JetLab Contact Form" <info@jetlabco.com>`,
      to: 'k.websupp@gmail.com', // ‚Üê –°–Æ–î–ê –ë–£–î–£–¢ –ü–†–ò–•–û–î–ò–¢–¨ –ü–ò–°–¨–ú–ê!
      replyTo: email,
      subject: `üöÄ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê: ${service} –æ—Ç ${name}`,
      html: htmlContent,
      text: `
–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê JETLABCO.COM

–ò–º—è: ${name}
Email: ${email}
–¢–µ–ª–µ—Ñ–æ–Ω: ${formattedPhone}
–£—Å–ª—É–≥–∞: ${service}
${message ? `–°–æ–æ–±—â–µ–Ω–∏–µ: ${message}` : ''}

–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}
      `.trim()
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    const info = await transporter.sendMail(mailOptions);
    
    console.log('‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ k.websupp@gmail.com:', info.messageId);
    
    res.json({
      success: true,
      message: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
      messageId: info.messageId
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã:', error);
    res.status(500).json({
      success: false,
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é —Ñ–æ—Ä–º—É',
      details: process.env.NODE_ENV === 'development' ? error.message : undefined
    });
  }
});

// Endpoint –∫–≤–∏–∑ —Ñ–æ—Ä–º—ã
app.post('/api/quiz', emailLimiter, async (req, res) => {
  try {
    console.log('üéØ –ü–æ–ª—É—á–µ–Ω–∞ –∫–≤–∏–∑ —Ñ–æ—Ä–º–∞:', req.body);

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const { error, value } = quizSchema.validate(req.body);
    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–≤–∏–∑–∞:', error.details[0].message);
      return res.status(400).json({
        success: false,
        error: '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö',
        details: error.details[0].message
      });
    }

    const { name, email, phone, company, service, budget, timeline, goals, description } = value;
    const formattedPhone = formatPhoneNumber(phone);

    // HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å—å–º–∞
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <style>
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: linear-gradient(135deg, #000 0%, #333 100%); color: white; padding: 25px; border-radius: 8px 8px 0 0; }
          .content { background: #f9f9f9; padding: 25px; border-radius: 0 0 8px 8px; }
          .section { margin-bottom: 25px; padding: 15px; background: white; border-radius: 6px; border-left: 4px solid #000; }
          .field { margin-bottom: 12px; }
          .label { font-weight: bold; color: #555; text-transform: uppercase; font-size: 12px; }
          .value { margin-top: 5px; font-size: 16px; }
          .goals { display: flex; flex-wrap: wrap; gap: 8px; margin-top: 10px; }
          .goal-tag { background: #000; color: white; padding: 4px 12px; border-radius: 20px; font-size: 12px; }
          .footer { text-align: center; margin-top: 20px; padding: 20px; color: #888; font-size: 14px; }
          .urgent { background: #ff6b6b; color: white; padding: 10px; border-radius: 5px; margin-bottom: 15px; text-align: center; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="urgent">
            <strong>üö® –î–ï–¢–ê–õ–¨–ù–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Æ –° JETLABCO.COM</strong>
          </div>
          <div class="header">
            <h2>üéØ –ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é: ${service}</h2>
            <p>–î–µ—Ç–∞–ª—å–Ω–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç ${name}</p>
            <p><strong>–ë—é–¥–∂–µ—Ç: ${budget}</strong></p>
          </div>
          <div class="content">
            <div class="section">
              <h3>üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ</h3>
              <div class="field">
                <div class="label">–ò–º—è</div>
                <div class="value">${name}</div>
              </div>
              <div class="field">
                <div class="label">Email</div>
                <div class="value"><a href="mailto:${email}">${email}</a></div>
              </div>
              <div class="field">
                <div class="label">–¢–µ–ª–µ—Ñ–æ–Ω</div>
                <div class="value"><a href="tel:${phone}">${formattedPhone}</a></div>
              </div>
              ${company ? `
              <div class="field">
                <div class="label">–ö–æ–º–ø–∞–Ω–∏—è</div>
                <div class="value">${company}</div>
              </div>
              ` : ''}
            </div>

            <div class="section">
              <h3>üíº –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞</h3>
              <div class="field">
                <div class="label">–£—Å–ª—É–≥–∞</div>
                <div class="value"><strong>${service}</strong></div>
              </div>
              <div class="field">
                <div class="label">–ë—é–¥–∂–µ—Ç</div>
                <div class="value"><strong style="color: #ff6b6b;">${budget}</strong></div>
              </div>
              <div class="field">
                <div class="label">–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏</div>
                <div class="value">${timeline}</div>
              </div>
            </div>

            <div class="section">
              <h3>üéØ –¶–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞</h3>
              <div class="goals">
                ${goals.map(goal => `<span class="goal-tag">${goal}</span>`).join('')}
              </div>
            </div>

            <div class="section">
              <h3>üìù –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞</h3>
              <div class="value">${description.replace(/\n/g, '<br>')}</div>
            </div>
          </div>
          <div class="footer">
            <p>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ JetLab.co | ${new Date().toLocaleString('ru-RU')}</p>
            <p><strong>‚ö° –¢–†–ï–ë–£–ï–¢ –ë–´–°–¢–†–û–ì–û –û–¢–í–ï–¢–ê!</strong></p>
          </div>
        </div>
      </body>
      </html>
    `;

    const mailOptions = {
      from: `"JetLab Consultation" <info@jetlabco.com>`,
      to: 'k.websupp@gmail.com', // ‚Üê –°–Æ–î–ê –ë–£–î–£–¢ –ü–†–ò–•–û–î–ò–¢–¨ –ü–ò–°–¨–ú–ê!
      replyTo: email,
      subject: `üéØ –ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Ø: ${service} –æ—Ç ${name} (${budget})`,
      html: htmlContent,
      text: `
–ó–ê–Ø–í–ö–ê –ù–ê –ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Æ –° JETLABCO.COM

–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ:
- –ò–º—è: ${name}
- Email: ${email}
- –¢–µ–ª–µ—Ñ–æ–Ω: ${formattedPhone}
${company ? `- –ö–æ–º–ø–∞–Ω–∏—è: ${company}` : ''}

–î–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞:
- –£—Å–ª—É–≥–∞: ${service}
- –ë—é–¥–∂–µ—Ç: ${budget}
- –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏: ${timeline}
- –¶–µ–ª–∏: ${goals.join(', ')}

–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:
${description}

–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}
      `.trim()
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    const info = await transporter.sendMail(mailOptions);
    
    console.log('‚úÖ –ö–≤–∏–∑ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ k.websupp@gmail.com:', info.messageId);
    
    res.json({
      success: true,
      message: '–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
      messageId: info.messageId
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∫–≤–∏–∑ —Ñ–æ—Ä–º—ã:', error);
    res.status(500).json({
      success: false,
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é',
      details: process.env.NODE_ENV === 'development' ? error.message : undefined
    });
  }
});

// Endpoint –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É
app.post('/api/newsletter', emailLimiter, async (req, res) => {
  try {
    console.log('üìß –ü–æ–ª—É—á–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É:', req.body);

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const { error, value } = newsletterSchema.validate(req.body);
    if (error) {
      return res.status(400).json({
        success: false,
        error: '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö',
        details: error.details[0].message
      });
    }

    const { email } = value;

    // HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å—å–º–∞
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <style>
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: #000; color: white; padding: 20px; border-radius: 8px 8px 0 0; text-align: center; }
          .content { background: #f9f9f9; padding: 20px; border-radius: 0 0 8px 8px; }
          .footer { text-align: center; margin-top: 20px; padding: 20px; color: #888; font-size: 14px; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h2>üìß –ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É</h2>
          </div>
          <div class="content">
            <p><strong>Email:</strong> <a href="mailto:${email}">${email}</a></p>
            <p><strong>–î–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏:</strong> ${new Date().toLocaleString('ru-RU')}</p>
            <p><strong>–ò—Å—Ç–æ—á–Ω–∏–∫:</strong> jetlabco.com</p>
          </div>
          <div class="footer">
            <p>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ JetLab.co</p>
          </div>
        </div>
      </body>
      </html>
    `;

    const mailOptions = {
      from: `"JetLab Newsletter" <info@jetlabco.com>`,
      to: 'k.websupp@gmail.com', // ‚Üê –°–Æ–î–ê –ë–£–î–£–¢ –ü–†–ò–•–û–î–ò–¢–¨ –ü–ò–°–¨–ú–ê!
      subject: `üìß –ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É`,
      html: htmlContent,
      text: `
–ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É

Email: ${email}
–î–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏: ${new Date().toLocaleString('ru-RU')}
–ò—Å—Ç–æ—á–Ω–∏–∫: jetlabco.com
      `.trim()
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    const info = await transporter.sendMail(mailOptions);
    
    console.log('‚úÖ –ü–∏—Å—å–º–æ –æ –ø–æ–¥–ø–∏—Å–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ k.websupp@gmail.com:', info.messageId);
    
    res.json({
      success: true,
      message: '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞',
      messageId: info.messageId
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
    res.status(500).json({
      success: false,
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É',
      details: process.env.NODE_ENV === 'development' ? error.message : undefined
    });
  }
});

// Middleware –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
  res.status(500).json({
    success: false,
    error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
    details: process.env.NODE_ENV === 'development' ? err.message : undefined
  });
});

// 404 handler
app.use('*', (req, res) => {
  res.status(404).json({
    success: false,
    error: 'Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω'
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`üöÄ JetLab Email Server –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üìß SMTP –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è info@jetlabco.com`);
  console.log(`üìÆ –ü–∏—Å—å–º–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –Ω–∞: k.websupp@gmail.com`);
  console.log(`üåê CORS –≤–∫–ª—é—á–µ–Ω –¥–ª—è frontend origins`);
});

module.exports = app;